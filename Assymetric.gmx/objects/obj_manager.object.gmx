<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initiate variables.
randomize();
draw_set_font(fnt_birlin);
draw_set_halign(fa_center);
global.bluecoins = 0;
global.greencoins = 0;
global.orangecoins = 0;
global.redcoins = 0;
global.State = states.hero1;

global.winner = 'none';
global.shield = 'false';

starttimer = 3;
/*firstPlayer = random_range(0,3);

if (firstPlayer == 1)
{
   global.State = states.hero1
}
if (firstPlayer == 2)
{
   global.State = states.hero2
}
if (firstPlayer == 3)
{
   global.State = states.hero3
}
else
{
    global.State = states.hero4
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///respawning.
if (global.State == states.timeup)
{
    if (global.bluecoins &gt; global.redcoins &amp;&amp; global.bluecoins &gt; global.greencoins &amp;&amp; global.bluecoins &gt; global.orangecoins)
    {
        global.winner = 'Blue'
    }
    else if (global.redcoins &gt; global.bluecoins &amp;&amp; global.redcoins &gt; global.greencoins &amp;&amp; global.redcoins &gt; global.orangecoins)
    {
        global.winner = 'Red'
    }
    else if (global.greencoins &gt; global.bluecoins &amp;&amp; global.greencoins &gt; global.redcoins &amp;&amp; global.greencoins &gt; global.orangecoins)
    {
        global.winner = 'Green'
    }
    else
    {
        global.winner = 'Orange'
    }
}
else
{
    if (instance_number(obj_player1state) &lt; 1)
    {
        instance_create (192,192, obj_player1state)
    }
    if (instance_number(obj_player2state) &lt; 1)
    {
        instance_create (1504,800, obj_player2state)
    }
    if (instance_number(obj_player3state) &lt; 1)
    {
        instance_create (1504,96, obj_player3state)
    }
    if (instance_number(obj_player4state) &lt; 1)
    {
        instance_create (96,800, obj_player4state)
    }

    if (instance_number (obj_box) &lt; 20)
    {
        xran = random_range(20,1580);
        yran = random_range(20,880);
        instance_create(xran,yran, obj_box)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add ui for scoring
//initialize variables
if (global.State == states.timeup)
{
draw_text_colour(800,96, 'Player 1:  ' + string(global.bluecoins) + '       Player 2:  ' + string(global.greencoins) + '    Player 3:  ' + string(global.orangecoins) + '       Player 4:  ' + string(global.redcoins) + '
The Winner is ' + string(global.winner), c_white,c_white,c_white,c_white,1)
}
else
{
draw_text_colour(800,96, 'Player 1:  ' + string(global.bluecoins) + '       Player 2:  ' + string(global.greencoins) + '    Player 3:  ' + string(global.orangecoins) + '       Player 4:  ' + string(global.redcoins), c_white,c_white,c_white,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
